from memory_profiler import memory_usage
import time
import matplotlib.pyplot as plt

def factorial_iterativo(n): 
    if n < 0:
        return "error"
    elif n == 1 or n == 0: 
        return 1
    else:
        res = 1
        for i in range(1, n + 1): 
            res *= i
        return res

def factorial_recursivo(n):
    if n < 0:
        return "error"
    elif n == 1 or n == 0: 
        return 1
    else:
        return n * factorial_recursivo(n - 1)

if __name__ == "__main__":
    tiempos_iter = []
    tiempos_rec = []
    memoria_iter = []
    memoria_rec = []

    valores_n = list(range(1, 20))

    for i in valores_n:
        inicio = time.perf_counter()
        mem, _ = memory_usage((factorial_iterativo, (i,)), retval=True, max_iterations=1)
        fin = time.perf_counter()
        tiempos_iter.append(fin - inicio)
        memoria_iter.append(max(mem))

    for i in valores_n:
        inicio = time.perf_counter()
        mem, _ = memory_usage((factorial_recursivo, (i,)), retval=True, max_iterations=1)
        fin = time.perf_counter()
        tiempos_rec.append(fin - inicio)
        memoria_rec.append(max(mem))

    plt.figure(figsize=(10, 4))

    plt.subplot(1, 2, 1)
    plt.plot(valores_n, tiempos_iter, marker='o', label="Iterativo")
    plt.plot(valores_n, tiempos_rec, marker='o', label="Recursivo")
    plt.title("Comparacion de Tiempos")
    plt.xlabel("n")
    plt.ylabel("Tiempo (segundos)")
    plt.legend()
    plt.grid(True)

    plt.subplot(1, 2, 2)
    plt.plot(valores_n, memoria_iter, marker='o', label="Iterativo")
    plt.plot(valores_n, memoria_rec, marker='o', label="Recursivo")
    plt.title("Comparacion de Uso de Memoria")
    plt.xlabel("n")
    plt.ylabel("Memoria (MB)")
    plt.legend()
    plt.grid(True)

    plt.tight_layout()
    plt.show()
